(ns predsedatel.core
  (:require [amazonica.aws.ec2 :as ec2]
            [amazonica.core :as a]))


(defn create-vpc []
  (let [vpc  (ec2/create-vpc :cidr-block "10.0.0.0/16"
                             :instance-tenancy "dedicated")]
    (ec2/create-tags :with-resources [(get-in vpc [:vpc :vpc-id])]
                     :tags [{:value "Type" :key "autogenerated"}
                            {:value "Id" :key "vpc-1"}])
    (comment attach-default-internet-gateway)
    ))

[:with-region "us-west-1"
 [:vpc {:cidr-block "10.0.0.0/16"
        :instance-tenancy "dedicated"
        :tags [{:value "Type" :key "autogenerated"}
               {:value "Id" :key "vpc-1"}]}]]

(def vpc-id (get-in test-vpc [:vpc :vpc-id]))

(comment
  (def igw (ec2/create-internet-gateway :attachments [{:vpc-id vpc-id}]))

  (ec2/attach-internet-gateway
   :internet-gateway-id (get-in igw [:internet-gateway :internet-gateway-id])
   :vpc-id vpc-id)

  (ec2/delete-internet-gateway :internet-gateway-id (get-in igw [:internet-gateway :internet-gateway-id]))

  igw

  (:internet-gateways (ec2/describe-internet-gateways))


  (defn vpc-by-id [id] (get-in (ec2/describe-vpcs :vpc-ids [id]) [:vpcs 0])))

(vpc-by-id vpc-id)


#_(ec2/delete-vpc :vpc-id (get-in test-vpc [:vpc :vpc-id]))

(map (fn [x] [(:tags x) (:vpc-id x)]) (:vpcs (ec2/describe-vpcs)))
